version: "3"

services:
  database:
    image: postgis/postgis:13-3.1-alpine
    container_name: postgis
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bonn"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bonn
    ports:
      - 5432:5432

  redis:
    image: redis:latest
    container_name: tegola-redis
    ports:
      - 6379:6379

  tegola-postgis-provider:
    image: gospatial/tegola:v0.15.2
    container_name: tegola-postgis-provider
    depends_on:
      database:
        condition: service_healthy
    restart: "unless-stopped"
    ports:
      - 8081:8081
    volumes:
      - ./config:/data
    command: >
      serve --config /data/config-postgis.toml
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: bonn
      DB_USER: postgres
      DB_PASSWORD: postgres
      TEGOLA_POSTGIS_SSL: disable
      TEGOLA_REDIS_SSL: false
      REDIS_HOST: redis:6379
      REDIS_PASSWORD: ""
      TEGOLA_SQL_DEBUG: LAYER_SQL

  tegola-mvt-postgis-provider:
    image: gospatial/tegola:v0.15.2
    container_name: tegola-mvt-postgis-provider
    depends_on:
      database:
        condition: service_healthy
    restart: "unless-stopped"
    ports:
      - 8080:8080
    volumes:
      - ./config:/data
    command: >
      serve --config /data/config-mvt-postgis.toml
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: bonn
      DB_USER: postgres
      DB_PASSWORD: postgres
      TEGOLA_POSTGIS_SSL: disable
      TEGOLA_REDIS_SSL: false
      REDIS_HOST: redis:6379
      REDIS_PASSWORD: ""
      TEGOLA_SQL_DEBUG: LAYER_SQL